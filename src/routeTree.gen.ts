/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NotesIndexRouteImport } from './routes/notes/index'
import { Route as NotesNotesIdRouteImport } from './routes/notes/$notesId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NotesIndexRoute = NotesIndexRouteImport.update({
  id: '/notes/',
  path: '/notes/',
  getParentRoute: () => rootRouteImport,
} as any)
const NotesNotesIdRoute = NotesNotesIdRouteImport.update({
  id: '/notes/$notesId',
  path: '/notes/$notesId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notes/$notesId': typeof NotesNotesIdRoute
  '/notes': typeof NotesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notes/$notesId': typeof NotesNotesIdRoute
  '/notes': typeof NotesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/notes/$notesId': typeof NotesNotesIdRoute
  '/notes/': typeof NotesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/notes/$notesId' | '/notes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/notes/$notesId' | '/notes'
  id: '__root__' | '/' | '/notes/$notesId' | '/notes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotesNotesIdRoute: typeof NotesNotesIdRoute
  NotesIndexRoute: typeof NotesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notes/': {
      id: '/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notes/$notesId': {
      id: '/notes/$notesId'
      path: '/notes/$notesId'
      fullPath: '/notes/$notesId'
      preLoaderRoute: typeof NotesNotesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotesNotesIdRoute: NotesNotesIdRoute,
  NotesIndexRoute: NotesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
